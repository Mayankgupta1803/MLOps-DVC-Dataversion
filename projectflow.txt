1. Create git repo and clone it in local.
2. Create mycode.py and add code to it. (it will save a csv file to a new "data" folder)
3. Do a git add-commit-push before initializing dvc.
# pip install dvc
4. Now we do "dvc init" (creates .dvcignore - like gitignore, .dvc)

--- to store data in dvc--------------------------------------
5. Now do "mkdir S3" in terminal to create a local directory instead of S3 or Azure (creates a new S3 directory)

--- Now tell dvc that where is remote origin instead of AWS Bucket , where you can store the data of dvc ---------------------------
6. Now we do "dvc remote add -d myremote S3"                   ("myremote is just a name, and instead of S3 you can give AWS S3 link as well)

--- now we are telling DVC that from now commit you are responsible for tracking "DATA" files or Data Versioning -------------------------
7. Next "dvc add data/"
   Now it will ask to do: ("git rm -r --cached 'data'" and "git commit -m "stop tracking data"")
   Because initially we were tracking data/ folder from git so now we remove it for DVC to handle.


8. Again we do "dvc add data/" (creates data.dvc) then "git add .gitignore data.dvc"


--- now run git status and dvc status -----------------------------------------------------------------
9. Now - "dvc commit" and then "dvc push" ---- that will save a version of data from .dvc to local S3 Bucket
      once update S3 then Do a git add-commit-push to mark this stage as first version of data.


10. Now make changes to mycode.py to append a new row in data, check changes via "dvc status"
      Because data changes then dvc start tracking those changes like git


11. Again - - "dvc commit" and then "dvc push" to save add new data in S3 and update data.dvc

" DVC track only S3 and data and .dvc chache file"

12. Then git add-commit-push (we're saving V2 of our data at this point)
13. check log "git log --oneline"
Check dvc/git status, everything should be upto date.



14. Now repeat step 9-12 for v3 of data.


---- fiew log command------------------
git log --oneline
git checkout <hash> - git checkout master
